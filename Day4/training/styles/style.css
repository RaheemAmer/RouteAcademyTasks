/* * {
    margin: 0;
    padding: 0;
} */

* {
    box-sizing: border-box;
}

.our-baking {
    text-align: center;
}

.item {
    width: 33.33%;
    float: left;
    padding: 10px;
}

.item img {
    width: 100%;
}

.inner {
    background-color: teal;
}

@media screen and (max-width: 600px) {
    .item {
        width: 100%;
    }
}

@media screen and (max-width: 601px) and (max-width: 768px) {
    .item {
        width: 50%;
    }
}


/* 
breakpoint in rwd
0 - 600
601 = 768
769 - 962
993 - 1200

instead of clearing float we give width:100%

you can either write media query after each section
after whole page
move it into separate file
*/


/* for printing */

@media print {
    .item {
        width: 50%;
    }
}


/* for reading */

@media speech {
    .item {
        width: 50%;
    }
}


/* for all */

@media all {
    .item {
        width: 50%;
    }
}


/* 
Cover -> gonna stretch the dimensions of the image
Contain -> gonna make the dimensions of it similar to parent
*/


/* 
Http request- solve too many request from the server for images - using spreadsheet - spirits
*/


/* 
remove the element and don't reserve his place act like it doesn't exist - display:none;
visibility: hidden;
opacity:0; - div + div content --- rgba affects on the background only - reserve place
overflow: hidden - no reserve place - if it's width is increased -  it deletes the rest / overflow: scroll and adds scroll bar
overflow: auto if it's increased it adds scrollbar otherwise 

(margin collapse) is solved using overflow
giv parent overflow: hidden;
*/


/*
outline doesn't add up to the width of the box
*/


/* 
border can act like outline if we made box-sizing: border-box
*/


/*
outline can't pick each side you want 
there is no outline-radius
*/


/*  
display: block;
-block takes full width as long as you didn't mention a specified width
-apply all width, height and margin and padding
-add line break

display:inline
-no line break
-no to all (padding and margin only works left and right) top and bottom if added block line like div, it will overflow the content of div

display:inline-block;
-combines both inline and block
-width if fitted accordinh to content's width
*/


/* 
Display: none
removed and hidden even from workflow

visibility: hidden;
hide the element but keeps it's place in the workflow
*/


/* 
Use case:
if there is a possibility that your box will increase size in the future or stretched out then
min-width is better than width, same for max-width (height also has the same properties)
*/

.task1 {
    background-color: royalblue;
    padding: 10px;
    width: 70%;
    text-align: center;
    /* margin-left: 15%;
    margin-right: 15%; */
    /* margin-left: auto;
    margin-right: auto; */
    margin: auto;
    /* outline: 4px solid green; */
    /* display: block; */
}